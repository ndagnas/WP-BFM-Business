//*******************************************************************************************************************************
// DEBUT DU FICHIER
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// Nom           : StorageSettings.cs
// Auteur        : Nicolas Dagnas
// Description   : Implémentation de l'objet StorageSettings
// Créé le       : 23/02/2015
// Modifié le    : 06/04/2015
//*******************************************************************************************************************************

//-------------------------------------------------------------------------------------------------------------------------------
#region Using directives
//-------------------------------------------------------------------------------------------------------------------------------
using System;
using System.IO.IsolatedStorage;
using System.Collections.Generic;
//-------------------------------------------------------------------------------------------------------------------------------
#endregion
//-------------------------------------------------------------------------------------------------------------------------------

//*******************************************************************************************************************************
// Début du bloc "System.IO.IsolatedStorage"
//*******************************************************************************************************************************
namespace System.IO.IsolatedStorage
	{

	//   ####  #####  #####  #####  #  #   #   ###     ####
	//  #      #        #      #    #  ##  #  #   #   #    
	//   ###   ###      #      #    #  # # #  #        ### 
	//      #  #        #      #    #  #  ##  #   ##      #
	//  ####   #####    #      #    #  #   #   ### #  #### 

	//***************************************************************************************************************************
	// Classe StorageSettings
	//***************************************************************************************************************************
	#region // Déclaration et Implémentation de l'Objet
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Collections de procédures complémentaires à l'objet <b>IsolatedStorageSettings</b>.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	public static class StorageSettings
		{
		//-----------------------------------------------------------------------------------------------------------------------
		// Section des Attributs
		//-----------------------------------------------------------------------------------------------------------------------
		private static Dictionary<string, object> Buffer = new Dictionary<string,object> ();
		//-----------------------------------------------------------------------------------------------------------------------

		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens la valeur d'un paramètre stocké dans le cache.
		/// </summary>
		/// <param name="Name">Nom du paramètre.</param>
		/// <param name="Default">Valeur à retourner si le paramètre n'existe pas.</param>
		/// <returns><b>String</b> contenant la valeur du paramètre.</returns>
		//-----------------------------------------------------------------------------------------------------------------------
		public static bool GetValue ( string Name, bool Default )
			{
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				object Settings = StorageSettings.GetValue ( Name );

				if ( Settings != null )
					{
					if ( Settings is string )
						{
						string Value = (string)Settings;

						return ((Default) ? ! Value.IsFalse () : Value.IsTrue  ());
						}

					if ( Settings is Boolean ) return (Boolean)Settings;
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			return Default;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens la valeur d'un paramètre stocké dans le cache.
		/// </summary>
		/// <param name="Name">Nom du paramètre.</param>
		/// <param name="Default">Valeur à retourner si le paramètre n'existe pas.</param>
		/// <returns><b>String</b> contenant la valeur du paramètre.</returns>
		//-----------------------------------------------------------------------------------------------------------------------
		public static DateTime GetValue ( string Name, DateTime Default )
			{
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				object Settings = StorageSettings.GetValue ( Name );

				if ( Settings != null && Settings is DateTime ) return (DateTime)Settings;
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			return Default;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens la valeur d'un paramètre stocké dans le cache.
		/// </summary>
		/// <param name="Name">Nom du paramètre.</param>
		/// <param name="Default">Valeur à retourner si le paramètre n'existe pas.</param>
		/// <returns><b>String</b> contenant la valeur du paramètre.</returns>
		//-----------------------------------------------------------------------------------------------------------------------
		public static int GetValue ( string Name, int Default )
			{
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				object Settings = StorageSettings.GetValue ( Name );

				if ( Settings != null )
					{
					if ( Settings is string ) return ((string)Settings).ToInteger ();
					if ( Settings is Int32  ) return  (int   )Settings;
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			return Default;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens la valeur d'un paramètre stocké dans le cache.
		/// </summary>
		/// <param name="Name">Nom du paramètre.</param>
		/// <param name="Default">Valeur à retourner si le paramètre n'existe pas.</param>
		/// <returns><b>String</b> contenant la valeur du paramètre.</returns>
		//-----------------------------------------------------------------------------------------------------------------------
		public static string GetValue ( string Name, string Default )
			{
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				object Settings = StorageSettings.GetValue ( Name );

				if ( Settings != null && Settings is string ) return (string)Settings;
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			return Default;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		/// <summary>
		/// Obtiens la valeur d'un paramètre stocké dans le cache.
		/// </summary>
		/// <param name="Name">Nom du paramètre.</param>
		/// <returns>Valeur du paramètre.</returns>
		//-----------------------------------------------------------------------------------------------------------------------
		public static object GetValue ( string Name )
			{
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				if ( ! StorageSettings.Buffer.ContainsKey ( Name ) )
					{
					if ( IsolatedStorageSettings.ApplicationSettings.Contains ( Name ) )
						StorageSettings.Buffer[Name] = IsolatedStorageSettings.ApplicationSettings [Name];
					}

				if ( StorageSettings.Buffer.ContainsKey ( Name ) )
					return StorageSettings.Buffer[Name];
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			return null;
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
				
		//***********************************************************************************************************************
		/// <summary>
		/// Définit la valeur d'un paramètre stocké dans le cache.
		/// </summary>
		/// <param name="Name">Nom du paramètre.</param>
		/// <param name="Value">Nouvelle valeur du paramètre, null pour le supprimer.</param>
		//-----------------------------------------------------------------------------------------------------------------------
		public static void SetValue ( string Name, object Value )
			{
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				if ( Value == null )
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( IsolatedStorageSettings.ApplicationSettings.Contains ( Name ) )
						{
						//-------------------------------------------------------------------------------------------------------
						IsolatedStorageSettings.ApplicationSettings.Remove ( Name );

						IsolatedStorageSettings.ApplicationSettings.Save ();
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					if ( StorageSettings.Buffer.ContainsKey ( Name ) )
						StorageSettings.Buffer.Remove ( Name );
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				else
					{
					//-----------------------------------------------------------------------------------------------------------
					if ( IsolatedStorageSettings.ApplicationSettings.Contains ( Name ) )
						{
						//-------------------------------------------------------------------------------------------------------
						if ( Value is bool || Value is string || Value is int )
							{
							//---------------------------------------------------------------------------------------------------
							object PreviusValue = IsolatedStorageSettings.ApplicationSettings[Name];

							if ( PreviusValue != Value )
								{
								//-----------------------------------------------------------------------------------------------
								IsolatedStorageSettings.ApplicationSettings[Name] = Value;

								IsolatedStorageSettings.ApplicationSettings.Save ();
								//-----------------------------------------------------------------------------------------------
								}
							//---------------------------------------------------------------------------------------------------
							}
						//-------------------------------------------------------------------------------------------------------
						else
							{
							//---------------------------------------------------------------------------------------------------
							IsolatedStorageSettings.ApplicationSettings[Name] = Value;

							IsolatedStorageSettings.ApplicationSettings.Save ();
							//---------------------------------------------------------------------------------------------------
							}
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					else
						{
						//-------------------------------------------------------------------------------------------------------
						IsolatedStorageSettings.ApplicationSettings[Name] = Value;

						IsolatedStorageSettings.ApplicationSettings.Save ();
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					StorageSettings.Buffer[Name] = Value;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	} // Fin du namespace "System.IO.IsolatedStorage"
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// FIN DU FICHIER
//*******************************************************************************************************************************
