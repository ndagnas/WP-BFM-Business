//*******************************************************************************************************************************
// DEBUT DU FICHIER
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// Nom           : DeviceInfos.cs
// Auteur        : Nicolas Dagnas
// Description   : Implémentation de l'objet DeviceInfos
// Créé le       : 23/02/2015
// Modifié le    : 20/05/2015
//*******************************************************************************************************************************

//-------------------------------------------------------------------------------------------------------------------------------
#region Using directives
//-------------------------------------------------------------------------------------------------------------------------------
using System;
using System.Resources;
using System.Reflection;
using System.Globalization;
using System.ComponentModel;
using System.IO.IsolatedStorage;
using System.Security.Cryptography;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
using Microsoft.Phone.Info;
using Microsoft.Phone.Shell;
using Microsoft.Phone.Controls;
//-------------------------------------------------------------------------------------------------------------------------------
#endregion
//-------------------------------------------------------------------------------------------------------------------------------

//*******************************************************************************************************************************
// Début du bloc "System.Windows.Phone.Infos"
//*******************************************************************************************************************************
namespace System.Windows.Phone.Infos
	{

	//   ###   ####   ####           ####  #####  #####  #####  #  #   #   ###     ####
	//  #   #  #   #  #   #         #      #        #      #    #  ##  #  #   #   #    
	//  #####  ####   ####   #####   ###   ###      #      #    #  # # #  #        ### 
	//  #   #  #      #                 #  #        #      #    #  #  ##  #   ##      #
	//  #   #  #      #             ####   #####    #      #    #  #   #   ### #  #### 

	//***************************************************************************************************************************
	// Classe DeviceInfos
	//***************************************************************************************************************************
	#region // Déclaration et Implémentation de l'Objet
	//---------------------------------------------------------------------------------------------------------------------------
	/// <summary>
	/// Fournit un accés aux paramètres de l'application.
	/// </summary>
	//---------------------------------------------------------------------------------------------------------------------------
	public class DeviceInfos
		{
		//***********************************************************************************************************************
		/// <summary>
		/// Constructeur statique de l'objet <b>DeviceInfos</b>
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		static DeviceInfos ()
			{
			//-------------------------------------------------------------------------------------------------------------------
			#region // ApplicationCulture
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				ApplicationCulture = new CultureInfo ( "fr-FR" );

				foreach ( CustomAttributeData Item in Assembly.GetExecutingAssembly ().CustomAttributes )
					{
					if ( Item.AttributeType == typeof (NeutralResourcesLanguageAttribute) )
						{
						foreach ( var arg in Item.ConstructorArguments )
							{
							if ( arg.Value is string )
								ApplicationCulture = new CultureInfo ( (string)arg.Value );
							}
						}
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#region // OsVersion, DeviceName, Manufacturer, UserAgent & DeviceName
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			string UserAgentMask = string.Empty;

			DeviceInfos.OsVersion    = "8.0";
			DeviceInfos.DeviceName   = "Lumia XXX";
			DeviceInfos.Manufacturer = "Nokia";

			if ( Environment.OSVersion.Version.Major < 8 )
				{
				UserAgentMask = "Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS {0};" +
				                " Trident/5.0; IEMobile/9.0; Touch; {1}; {2})";

				if ( Environment.OSVersion.Version.Minor < 10 )
					{
					DeviceInfos.OsVersion = "7.0";
					DeviceInfos.Version   = WindowsPhoneVersion.WP70;
					}
				else
					{
					DeviceInfos.OsVersion = "7.5";
					DeviceInfos.Version   = WindowsPhoneVersion.WP71;
					}
				}
			else if ( Environment.OSVersion.Version.Major < 10 )
				{
				UserAgentMask = "Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone OS {0};" +
				                " Trident/6.0; IEMobile/10.0; ARM; Touch; {1}; {2})";

				if ( Environment.OSVersion.Version.Minor < 10 )
					{
					DeviceInfos.OsVersion = "8.0";
					DeviceInfos.Version   = WindowsPhoneVersion.WP80;
					}
				else
					{
					DeviceInfos.OsVersion = "8.1";
					DeviceInfos.Version   = WindowsPhoneVersion.WP81;
					}
				}
			else
				{
				UserAgentMask = "Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone OS {0};" +
				                " Trident/6.0; IEMobile/10.0; ARM; Touch; {1}; {2})";

				DeviceInfos.OsVersion = "10.0";
				DeviceInfos.Version   = WindowsPhoneVersion.WP10;
				}

			try
				{
				DeviceInfos.Manufacturer = DeviceStatus.DeviceManufacturer.ToTitleCase ();
				DeviceInfos.DeviceName   = DeviceStatus.DeviceName        .ToTitleCase ();
				}
			catch {}

			DeviceInfos.UserAgent = string.Format ( UserAgentMask, DeviceInfos.OsVersion   , 
			                                                       DeviceInfos.Manufacturer, 
																   DeviceInfos.DeviceName  );

			DeviceInfos.DeviceName = string.Format ( "{0} {1}", DeviceInfos.Manufacturer, 
			                                                    DeviceInfos.DeviceName  );
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#region // TextHeight, TitleHeight, ApplicationBar & DeviceType
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			TextHeight                    = 18;
			SystemBarHeight               = 32;
			ApplicationBarHeight          = 72;
			ApplicationButtonSize         = 48;
			ApplicationButtonMarging      = 12;
			MinimizedApplicationBarHeight = 30;
			DeviceType                    = DeviceType.SmartPhone;
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				var AppBar = new ApplicationBar () { Opacity = 0 };

				ApplicationBarHeight = AppBar.DefaultSize;
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				if ( ! DesignerProperties.IsInDesignTool )
					{
					//-----------------------------------------------------------------------------------------------------------
					var Version81 = new Version ( 8, 1 );
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					if ( Environment.OSVersion.Version >= Version81 )
						{
						//-------------------------------------------------------------------------------------------------------
						object SizeObject;
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						if ( DeviceExtendedProperties.TryGetValue ( "PhysicalScreenResolution", out SizeObject ) )
							{
							//---------------------------------------------------------------------------------------------------
							var screenResolution = (Size)SizeObject;

							object DpiObjet;
							//---------------------------------------------------------------------------------------------------

							//---------------------------------------------------------------------------------------------------
							if ( DeviceExtendedProperties.TryGetValue ( "RawDpiY", out DpiObjet ) )
								{
								var Dpi = (double) DpiObjet;

								if ( Dpi > 0 )
									{
									var ScreenDiagonal = Math.Sqrt ( 
										Math.Pow ( screenResolution.Width  / Dpi, 2 ) + 
										Math.Pow ( screenResolution.Height / Dpi, 2 ) );

									if ( ScreenDiagonal >= 5 )
										{
										TextHeight                    = 16;
										SystemBarHeight               = 24;
										ApplicationBarHeight          = 56;
										ApplicationButtonSize         = 45;
										ApplicationButtonMarging      =  6;
										MinimizedApplicationBarHeight = 23;
										DeviceType                    = DeviceType.Phablet;
										}
									}
								}
							//---------------------------------------------------------------------------------------------------
							}
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#region // ScaleFactor
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
#if WP7
			//-------------------------------------------------------------------------------------------------------------------
			ScaleFactor = Factor.Scale_WVGA;
			//-------------------------------------------------------------------------------------------------------------------
#endif
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
#if WP80
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				switch ( Application.Current.Host.Content.ScaleFactor )
					{
					//-----------------------------------------------------------------------------------------------------------
					case 100 : ScaleFactor = Factor.Scale_WVGA; break;
					case 150 : ScaleFactor = Factor.Scale_720P; break;
					case 160 : ScaleFactor = Factor.Scale_WXGA; break;
					default  : ScaleFactor = Factor.Scale_WVGA; break;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------
#endif
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
#if WP81
			//-------------------------------------------------------------------------------------------------------------------
			try
				{
				//---------------------------------------------------------------------------------------------------------------
				switch ( Application.Current.Host.Content.ScaleFactor )
					{
					//-----------------------------------------------------------------------------------------------------------
					case 100 : ScaleFactor = Factor.Scale_WVGA ; break;
					case 150 : ScaleFactor = Factor.Scale_720P ; break;
					case 160 : ScaleFactor = Factor.Scale_WXGA ; break;
					case 225 : ScaleFactor = Factor.Scale_1080P; break;
					default  : ScaleFactor = Factor.Scale_WVGA ; break;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			catch {}
			//-------------------------------------------------------------------------------------------------------------------
#endif
			//-------------------------------------------------------------------------------------------------------------------

			//-------------------------------------------------------------------------------------------------------------------
			#endregion
			//-------------------------------------------------------------------------------------------------------------------
			}
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> ApplicationBarHeight
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la hauteur de la barre d'application.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static double ApplicationBarHeight { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> ApplicationButtonSize
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la taille des boutons d'application.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static double ApplicationButtonSize { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> ApplicationButtonMarging
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens l'espace entre les boutons d'application.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static double ApplicationButtonMarging { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> ApplicationCulture
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la culture par défaut de l'application.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static CultureInfo ApplicationCulture { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> DeviceName
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens le nom de l'appareil.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static string DeviceName { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> DeviceType
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens le type d'appareil.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static DeviceType DeviceType { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> Manufacturer
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens le nom du constructeur de l'appareil.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static string Manufacturer { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> MinimizedApplicationBarHeight
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la hauteur de la barre d'application réduite.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static double MinimizedApplicationBarHeight { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> Orientation
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens l'orientation de l'écran.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static PhoneOrientation Orientation
			{
			//-------------------------------------------------------------------------------------------------------------------
			get
				{
				//---------------------------------------------------------------------------------------------------------------
				var RootVisual = Application.Current.RootVisual as PhoneApplicationFrame;

				if ( RootVisual != null )
					{
					switch ( RootVisual.Orientation )
						{
						case PageOrientation.None           : return PhoneOrientation.Portrait;
						case PageOrientation.Portrait       : return PhoneOrientation.Portrait;
						case PageOrientation.Landscape      : return PhoneOrientation.LandscapeLeft;
						case PageOrientation.PortraitUp     : return PhoneOrientation.Portrait;
						case PageOrientation.PortraitDown   : return PhoneOrientation.Portrait;
						case PageOrientation.LandscapeLeft  : return PhoneOrientation.LandscapeLeft;
						case PageOrientation.LandscapeRight : return PhoneOrientation.LandscapeRight;
						}
					}

				return PhoneOrientation.Portrait;
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			}
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> OsVersion
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la version de l'Os.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static string OsVersion { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> ScaleFactor
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtierns la définition courante.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static Factor ScaleFactor { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> SystemBarHeight
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la hauteur du titre.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static double SystemBarHeight { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> TextHeight
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la hauteur du texte.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static double TextHeight { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************

		//***********************************************************************************************************************
		#region // >> UserAgent
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens l'User-Agent de l'appareil.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static string UserAgent { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> Version
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens la version de l'Os.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static WindowsPhoneVersion Version { get; private set; }
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		
		//***********************************************************************************************************************
		#region // >> VisitorID
		//-----------------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Obtiens l'identifiant unique de l'appareil.
		/// </summary>
		//-----------------------------------------------------------------------------------------------------------------------
		public static string VisitorID
			{
			//-------------------------------------------------------------------------------------------------------------------
			get
				{
				//---------------------------------------------------------------------------------------------------------------
				string visitorID = StorageSettings.GetValue ( "visitor-id", string.Empty );
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				if ( visitorID.Length != 23 )
					{
					//-----------------------------------------------------------------------------------------------------------
					visitorID = string.Empty;
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					try
						{
						//-------------------------------------------------------------------------------------------------------
						byte[] UniqueId = (byte[])DeviceExtendedProperties.
						                                             GetValue ( "DeviceUniqueId" );
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						for ( int Cpt = 0 ; Cpt < UniqueId.Length ; Cpt ++ )
							{
							string hex = string.Format ( "{0:x}", UniqueId [Cpt] );

							if ( hex.Length == 1 ) visitorID += "0";

							visitorID += hex;
							}
						//-------------------------------------------------------------------------------------------------------

						//-------------------------------------------------------------------------------------------------------
						visitorID = Md5Encryptor.GetString ( visitorID );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------
					catch
						{
						//-------------------------------------------------------------------------------------------------------
						visitorID = Md5Encryptor.GetString ( string.Format ( "{0} => {1}", 
							DateTime.Now.ToString ("yyyyMMddHHmmss"), new Guid ().ToString () ) );
						//-------------------------------------------------------------------------------------------------------
						}
					//-----------------------------------------------------------------------------------------------------------

					//-----------------------------------------------------------------------------------------------------------
					visitorID = string.Format ( "{0}.{1}", visitorID.Substring ( 10, 14 ), 
					                                       visitorID.Substring (     24 ) );
					VisitorID = visitorID;
					//-----------------------------------------------------------------------------------------------------------
					}
				//---------------------------------------------------------------------------------------------------------------

				//---------------------------------------------------------------------------------------------------------------
				return visitorID;
				//---------------------------------------------------------------------------------------------------------------
				}
			//-------------------------------------------------------------------------------------------------------------------
			set { StorageSettings.SetValue ( "visitor-id", value ); }
			//-------------------------------------------------------------------------------------------------------------------
			}
		//-----------------------------------------------------------------------------------------------------------------------
		#endregion
		//***********************************************************************************************************************
		}
	//---------------------------------------------------------------------------------------------------------------------------
	#endregion
	//***************************************************************************************************************************

	} // Fin du namespace "System.Windows.Phone.Infos"
//*******************************************************************************************************************************

//*******************************************************************************************************************************
// FIN DU FICHIER
//*******************************************************************************************************************************
