<Application x:Class="NextRadio.Instance"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
        xmlns:local="clr-namespace:NextRadio"
        xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
        xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
		xmlns:systemWindowsPhoneInfos="clr-namespace:System.Windows.Phone.Infos" xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone">

	<Application.Resources>

		<!-- Colors -->

		<SolidColorBrush x:Key="ApplicationBackground" Color="#FFF08C00"/>

		<!-- TransitionFrame -->

		<Style TargetType="toolkit:TransitionFrame">
			<Setter Property="Background" Value="{StaticResource PhoneBackgroundBrush}"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:TransitionFrame">
						<Border x:Name="ClientArea" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}">
							<Grid>
								<ContentPresenter x:Name="FirstContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="1" Visibility="Visible">
									<ContentPresenter.Projection>
										<PlaneProjection RotationX="0" RotationY="0"/>
									</ContentPresenter.Projection>
								</ContentPresenter>
								<ContentPresenter x:Name="SecondContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="1" Visibility="Visible">
									<ContentPresenter.Projection>
										<PlaneProjection RotationX="0" RotationY="0"/>
									</ContentPresenter.Projection>
								</ContentPresenter>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Storyboard x:Key="BackwardInPortrait">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)">
				<EasingDoubleKeyFrame KeyTime="0" Value="88"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.01" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="BackwardInLandscape">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)">
				<EasingDoubleKeyFrame KeyTime="0" Value="88"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut" Exponent="2"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.01" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="ForwardInPortrait">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)">
				<EasingDoubleKeyFrame KeyTime="0" Value="-88"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut" Exponent="6"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.01" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
				<DiscreteObjectKeyFrame KeyTime="0">
					<DiscreteObjectKeyFrame.Value>
						<Visibility>Visible</Visibility>
					</DiscreteObjectKeyFrame.Value>
				</DiscreteObjectKeyFrame>
			</ObjectAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="ForwardInLandscape">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)">
				<EasingDoubleKeyFrame KeyTime="0" Value="-88"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseOut" Exponent="6"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.01" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)">
				<DiscreteObjectKeyFrame KeyTime="0">
					<DiscreteObjectKeyFrame.Value>
						<Visibility>Visible</Visibility>
					</DiscreteObjectKeyFrame.Value>
				</DiscreteObjectKeyFrame>
			</ObjectAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="ForwardOutPortrait">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="88">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseIn" Exponent="2"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.14" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="ForwardOutLandscape">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="88">
					<EasingDoubleKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseIn" Exponent="2" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.14" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<!-- ScrollViewer -->

		<Style TargetType="ScrollViewer">
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="BorderBrush" Value="#66FFFFFF"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ScrollViewer">
						<Border>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="ScrollStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.001"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Scrolling">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="VerticalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
											<DoubleAnimation Storyboard.TargetName="HorizontalScrollBar" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="NotScrolling"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid Background="{TemplateBinding Background}">
								<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
								<ScrollBar x:Name="VerticalScrollBar" IsHitTestVisible="False" Opacity="0" Height="Auto" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Orientation="Vertical" Margin="0,0,-1,0" ViewportSize="{TemplateBinding ViewportHeight}" Background="{TemplateBinding BorderBrush}"/>
								<ScrollBar x:Name="HorizontalScrollBar" IsHitTestVisible="False" Opacity="0" Width="Auto" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Orientation="Horizontal" Margin="0,0,0,-1" ViewportSize="{TemplateBinding ViewportWidth}" Background="{TemplateBinding BorderBrush}"/>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- ListPicker -->

		<Style TargetType="toolkit:ListPicker">
			<Setter Property="Background" Value="#FF515866"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderBrush" Value="{StaticResource ApplicationBackground}"/>
			<Setter Property="BorderThickness" Value="4"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:ListPicker">
						<StackPanel Margin="12,5,12,10">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="PickerStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Highlighted" />
									<VisualState x:Name="Disabled" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentControl Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="Segoe UI" FontSize="24" Foreground="#FFAFAFAF" HorizontalAlignment="Left" IsTabStop="False" Margin="-1,0,0,12" Opacity="{TemplateBinding Opacity}" />
							<Grid>
								<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
									<UserControl x:Name="UserControl" Foreground="{TemplateBinding Foreground}">
										<StackPanel>
											<TextBlock x:Name="MultipleSelectionModeSummary" Margin="8,8,0,8" />
											<Canvas x:Name="ItemsPresenterHost" MinHeight="46">
												<ItemsPresenter x:Name="ItemsPresenter">
													<ItemsPresenter.RenderTransform>
														<TranslateTransform x:Name="ItemsPresenterTranslateTransform"/>
													</ItemsPresenter.RenderTransform>
												</ItemsPresenter>
											</Canvas>
										</StackPanel>
									</UserControl>
								</Border>
							</Grid>
						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="toolkit:ListPickerItem">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="Padding" Value="8,10"/>
			<Setter Property="FontSize" Value="26"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:ListPickerItem">
						<Grid Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Foreground" Duration="0">
												<DiscreteObjectKeyFrame Value="#FF888888" KeyTime="0"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentControl x:Name="ContentContainer" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- ToggleSwitch -->

		<Style TargetType="toolkitPrimitives:ToggleSwitchButton">
			<Setter Property="Background" Value="#FF31353E"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="SwitchForeground" Value="{StaticResource ApplicationBackground}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkitPrimitives:ToggleSwitchButton">
						<Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CacheMode="BitmapCache" Opacity="{TemplateBinding Opacity}" Padding="{TemplateBinding Padding}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimation Storyboard.TargetName="SwitchBottom" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" Duration="0" To="{StaticResource PhoneForegroundColor}"/>
											<ColorAnimation Storyboard.TargetName="ThumbCenter" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Duration="0" To="{StaticResource PhoneForegroundColor}"/>
											<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.3"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.05" To="Unchecked"/>
										<VisualTransition GeneratedDuration="0:0:0.05" To="Checked"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Checked">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="BackgroundTranslation" Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="68">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase Exponent="15" EasingMode="EaseOut"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
											<DoubleAnimation Storyboard.TargetName="ThumbTranslation" Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="68">
												<DoubleAnimation.EasingFunction>
													<ExponentialEase Exponent="15" EasingMode="EaseOut"/>
												</DoubleAnimation.EasingFunction>
											</DoubleAnimation>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Dragging"/>
									<VisualState x:Name="Unchecked">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="BackgroundTranslation" Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="0"/>
											<DoubleAnimation Storyboard.TargetName="ThumbTranslation" Storyboard.TargetProperty="(TranslateTransform.X)" Duration="0" To="0"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="SwitchRoot" Background="Transparent" Height="95" Width="136">
								<Grid x:Name="SwitchTrack" Width="88">
									<Grid x:Name="SwitchBottom" Background="{TemplateBinding SwitchForeground}" Height="32">
										<Rectangle x:Name="SwitchBackground" Fill="{TemplateBinding Background}" Width="76" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
											<Rectangle.RenderTransform>
												<TranslateTransform x:Name="BackgroundTranslation"/>
											</Rectangle.RenderTransform>
										</Rectangle>
										<Border BorderBrush="White" BorderThickness="2">
											<Border BorderBrush="#FF31353E" BorderThickness="4"/>
										</Border>
									</Grid>
									<Border x:Name="SwitchThumb" BorderBrush="#FF31353E" BorderThickness="4,0" Margin="-4,0" Width="28" Height="36" HorizontalAlignment="Left">
										<Border.RenderTransform>
											<TranslateTransform x:Name="ThumbTranslation"/>
										</Border.RenderTransform>
										<Border x:Name="ThumbCenter" BorderBrush="White" BorderThickness="2" Background="White"/>
									</Border>
								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="toolkit:ToggleSwitch">
			<Setter Property="Background" Value="White"/>
			<Setter Property="FontFamily" Value="Segoe UI"/>
			<Setter Property="FontSize" Value="26"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="SwitchForeground" Value="{StaticResource ApplicationBackground}"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:ToggleSwitch">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CacheMode="BitmapCache">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Header" Storyboard.TargetProperty="Opacity" Duration="0" To="0.3"/>
											<DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To="0.3"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid Margin="12,5,12,10">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<ContentControl x:Name="Header" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" FontFamily="Segoe UI" FontSize="24" Foreground="#FFAFAFAF" HorizontalAlignment="Left" IsTabStop="False" Margin="-1,0,0,0" Opacity="{TemplateBinding Opacity}" VerticalAlignment="Bottom"/>
								<ContentControl x:Name="Content" Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" Margin="-1,1,0,-7" Opacity="{TemplateBinding Opacity}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<toolkitPrimitives:ToggleSwitchButton x:Name="Switch" Grid.RowSpan="2" Grid.Column="1" Background="{TemplateBinding Background}" Margin="-22,-29,-24,-28" Opacity="{TemplateBinding Opacity}" SwitchForeground="{TemplateBinding SwitchForeground}" VerticalAlignment="Bottom"/>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- VerticalPerformanceProgressBar -->

		<Style x:Key="VerticalPerformanceProgressBar" TargetType="toolkit:PerformanceProgressBar">
			<Setter Property="IsIndeterminate" Value="False"/>
			<Setter Property="Foreground" Value="{StaticResource PhoneAccentBrush}"/>
			<Setter Property="Background" Value="{StaticResource PhoneAccentBrush}"/>
			<Setter Property="IsHitTestVisible" Value="False"/>
			<Setter Property="Padding" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="toolkit:PerformanceProgressBar">
						<ProgressBar Name="EmbeddedProgressBar" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" IsIndeterminate="{TemplateBinding ActualIsIndeterminate}" Padding="{TemplateBinding Padding}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="VisibilityStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.25" To="Normal"/>
										<VisualTransition GeneratedDuration="0:0:0.75" To="Hidden"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Hidden">
										<Storyboard>
											<DoubleAnimation To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EmbeddedProgressBar" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ProgressBar.Template>
								<ControlTemplate TargetType="ProgressBar">
									<toolkitPrimitives:RelativeAnimatingContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
										<toolkitPrimitives:RelativeAnimatingContentControl.Resources>
											<ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseOut"/>
											<ExponentialEase EasingMode="EaseIn" Exponent="1" x:Key="ProgressBarEaseIn"/>
										</toolkitPrimitives:RelativeAnimatingContentControl.Resources>
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualState x:Name="Determinate"/>
												<VisualState x:Name="Indeterminate">
													<Storyboard Duration="00:00:04.4" RepeatBehavior="Forever">
														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IndeterminateRoot">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<Visibility>Visible</Visibility>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="Y" Storyboard.TargetName="R1TT">
															<LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.2" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
															<LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.2" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="Y" Storyboard.TargetName="R2TT">
															<LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.2" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
															<LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.2" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="Y" Storyboard.TargetName="R3TT">
															<LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.2" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
															<LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.2" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="Y" Storyboard.TargetName="R4TT">
															<LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.2" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
															<LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.2" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="Y" Storyboard.TargetName="R5TT">
															<LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.2" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
															<LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.2"/>
															<EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.2" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R1">
															<DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
															<DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R2">
															<DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
															<DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R3">
															<DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
															<DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R4">
															<DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
															<DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
														</DoubleAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R5">
															<DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
															<DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
														</DoubleAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Border x:Name="IndeterminateRoot" Margin="{TemplateBinding Padding}">
											<Grid VerticalAlignment="Top">
												<Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R1" Opacity="0" CacheMode="BitmapCache">
													<Rectangle.RenderTransform>
														<TranslateTransform x:Name="R1TT"/>
													</Rectangle.RenderTransform>
												</Rectangle>
												<Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R2" Opacity="0" CacheMode="BitmapCache">
													<Rectangle.RenderTransform>
														<TranslateTransform x:Name="R2TT"/>
													</Rectangle.RenderTransform>
												</Rectangle>
												<Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R3" Opacity="0" CacheMode="BitmapCache">
													<Rectangle.RenderTransform>
														<TranslateTransform x:Name="R3TT"/>
													</Rectangle.RenderTransform>
												</Rectangle>
												<Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R4" Opacity="0" CacheMode="BitmapCache">
													<Rectangle.RenderTransform>
														<TranslateTransform x:Name="R4TT"/>
													</Rectangle.RenderTransform>
												</Rectangle>
												<Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R5" Opacity="0" CacheMode="BitmapCache">
													<Rectangle.RenderTransform>
														<TranslateTransform x:Name="R5TT"/>
													</Rectangle.RenderTransform>
												</Rectangle>
											</Grid>
										</Border>
									</toolkitPrimitives:RelativeAnimatingContentControl>
								</ControlTemplate>
							</ProgressBar.Template>
						</ProgressBar>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- SYSTEM.WINDOWS.PHONE.INFOS -->

		<systemWindowsPhoneInfos:DeviceInfos x:Key="DeviceInfos" />

		<systemWindowsPhoneInfos:DeviceTypeConverter x:Key="DeviceTypeConverter" />

		<systemWindowsPhoneInfos:ScaleUriConverter x:Key="ScaleUriConverter" />

	</Application.Resources>

	<Application.ApplicationLifetimeObjects>
		<shell:PhoneApplicationService Launching="OnLaunching" Closing="OnClosing" Activated="OnActivated" Deactivated="OnDeactivated"/>
	</Application.ApplicationLifetimeObjects>
</Application>